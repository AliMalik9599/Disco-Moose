{"version":3,"sources":["containers/Login/bulb-logo.png","containers/Login/loginAnimation.gif","components/Card/guitar.png","containers/Registration/bulb-logo.png","containers/Login/Login.js","containers/Login/Animation.js","components/Course/Course.js","components/CourseList/CourseList.js","components/SkillList/Skill/Skill.js","components/SkillList/SkillList.js","containers/Selection/Selection.js","theme.js","components/Card/Card.js","components/CardList/CardList.js","containers/Deck/Deck.js","containers/CourseWrapper/CourseWrapper.js","containers/Registration/Registration.js","containers/SideBar/SideBar.js","hoc/Layout/Layout.js","App.js","serviceWorker.js","index.js","hoc/Layout/Layout.module.css","containers/Login/Login.module.css"],"names":["module","exports","Login","props","handleChange","event","preventDefault","str_url","fetch","method","body","JSON","stringify","username","state","toString","password","headers","then","response","json","data","key","setState","token","alert","formClick","handleNameChange","value","target","name","handleEmailChange","handlePasswordChange","handleRegister","toRegistration","classes","this","Box","className","main","center","logo","src","require","alt","Typography","title","align","Grid","container","spacing","direction","alignItems","justify","item","xs","Container","form","onSubmit","Input","input","placeholder","type","onChange","id","Button","button","inline","style","color","onClick","Component","withStyles","theme","fontFamily","textAlign","margin","fontSize","padding","width","formName","height","borderColor","borderWidth","borderStyle","minWidth","marginTop","borderRadius","backgroundColor","display","Animation","setTimeout","stopAnimation","fadeOut","useStyles","makeStyles","root","boxShadow","pos","marginBottom","actions","Course","window","localStorage","getItem","Card","raised","variant","CardContent","gutterBottom","component","description","num_skills","num_cards","e","clickHandler","CourseList","selectCourse","courseKey","selection","courses","map","course","maxWidth","box","border","Skill","React","useState","ticked","FormControlLabel","control","Checkbox","checked","skillUpdate","label","flexDirection","formControl","SkillList","skills","skill","num_levels","parse","FormGroup","options","flexGrow","Selection","setSkills","open","setOpen","anchorRef","useRef","selectedIndex","setSelectedIndex","handleClose","current","contains","useEffect","ButtonGroup","ref","aria-label","size","aria-controls","undefined","aria-expanded","aria-haspopup","prevOpen","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","option","index","MenuItem","selected","time","handleMenuItemClick","doneClick","createMuiTheme","palette","primary","light","dark","secondary","disabled","info","disco","charm","typography","htmlFontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","h1","fontWeight","lineHeight","letterSpacing","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","textTransform","caption","overline","media","paddingTop","expand","transform","marginLeft","transitions","create","duration","shortest","expandOpen","avatar","Theme","favorite","CourseCard","showMore","favorited","is_favorited","d","last_completed","dateToString","CardHeader","Avatar","action","IconButton","content","level","CardActions","disableSpacing","addToFavorites","is_complete","pressComplete","clsx","console","log","update","Collapse","in","timeout","unmountOnExit","paragraph","CardList","cards","card","view_count","completed","Deck","cardId","status","refresh","courseid","setItem","handleComplete","bind","handleFavorite","course_view","skill_view","deck_view","CourseWrapper","selectedCourse","view","selectedSkills","selectedTime","viewToSkills","indexOf","splice","push","viewToDeck","courseReset","resetToCourse","viewToCourse","skillReset","resetToSkill","handleCourseClick","skillSelection","handleDonePress","timeSelection","Registration","confirm","toLogin","handleConfirmPasswordChange","appBar","easing","sharp","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","justifyContent","contentShift","SideBar","drawerAction","parentCourse","parentCalendar","parentSettings","parentLogout","parentView","parentCourseView","parentSkill","viewEnum","useTheme","handleDrawerOpen","handleDrawerClose","OnCourseList","text","icon","OnSkillSelect","OnCards","OnCalender","AccountSettings","Items","AppBar","position","Toolbar","edge","Drawer","anchor","paper","Divider","List","ListItem","ListItemIcon","ListItemText","Layout","changeLayoutState","layoutView","goCalendar","goSettings","goLogout","clear","courseView","Content","App","Boolean","location","hostname","match","ReactDOM","render","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.59640063.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bulb-logo.bd730b9d.png\";","module.exports = __webpack_public_path__ + \"static/media/loginAnimation.0fd658ff.gif\";","module.exports = __webpack_public_path__ + \"static/media/guitar.663344b1.png\";","module.exports = __webpack_public_path__ + \"static/media/bulb-logo.bd730b9d.png\";","import React, {Component} from \"react\";\nimport {Box, withStyles, Button, Grid, Typography, Input, Container} from \"@material-ui/core\";\n\n\n/* Styling for the Login  page */\nconst styles = theme => ({\n\n    main: {\n        fontFamily: 'Montserrat',\n    },\n\n    center: {\n        textAlign: 'center',\n    },\n\n    input: {\n        margin: '5%',\n        color: '#0e1428',\n        fontSize: '20px',\n        padding: '5px',\n        width: '90%',\n    },\n\n    formName: {\n        textAlign: 'center',\n        fontFamily: 'Montserrat',\n        fontSize: '35pt',\n        color: '#0e1428',\n    },\n\n    logo: {\n        justify: 'center',\n        width: '15%',\n        height: '15%',\n    },\n    title: {\n        fontFamily: 'Montserrat',\n        fontSize: '40pt',\n        color: '#0e1428',\n    },\n\n    container: {\n        borderColor: '#98C1D9',\n        borderWidth: '3px',\n        borderStyle: 'solid',\n        minWidth: '100%',\n        marginTop: '10%',\n        borderRadius: '5px',\n        padding: '5%',\n    },\n\n    button: {\n        fontSize: '17pt',\n        fontFamily: 'Montserrat',\n        backgroundColor: '#EE6C4D',\n        margin: '5%',\n        textAlign: 'center',\n        width: '90%',\n        \"&:hover\": {\n            backgroundColor: '#345E83',\n        },\n    },\n    inline: {\n        display: 'inline-block',\n        padding: '2%',\n        textAlign: 'center',\n    },\n});\n\n/* This class allows the user to login to the site\n * using a name, username and password.\n * On success, it alerts the user that username and\n * password were correct and directs to the course selection page.\n * On failure, it alerts the user that the username\n * and password were incorrect.\n */\nclass Login extends Component {\n\n    //information needed in order to login\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            username: '',\n            password: '',\n            token: '',\n        };\n        this.str_url = \"\";\n    }\n\n    //send post request to authenticate login, show corresponding alert\n    handleChange = event => {\n        event.preventDefault();\n        this.str_url = '/rest-auth/login/';\n        fetch(this.str_url, {\n            method: 'POST',\n            body: JSON.stringify({\n                username: this.state.username.toString(),\n                password: this.state.password.toString()\n            }),\n            headers: {\n                'Content-type': 'application/json; charset=UTF-8'\n            }\n        }).then(response => response.json())\n            .then(data => {\n                if(!data.key) {\n                    alert(\"Incorrect Username or Password\");\n                } else {\n                    this.setState({token: data.key})\n                    alert(\"Correct Username or Password\");\n                    this.props.formClick(this.state.token);\n                }\n            });\n    }\n\n    //set name to the user entered name\n    handleNameChange = event => {\n        const value = event.target.value;\n        this.setState({name: value});\n    }\n\n    //set username to the user entered username\n    handleEmailChange = event => {\n        const value = event.target.value;\n        this.setState({username: value});\n    }\n\n    //set password to the user entered password\n    handlePasswordChange = event => {\n        const value = event.target.value;\n        this.setState({password: value});\n    }\n\n    //direct user to signup page if the user wants to make an account\n    handleRegister = event => {\n        this.setState({token: '0'});\n        event.preventDefault();\n        this.props.formClick(this.state.token);\n        this.props.toRegistration();\n    }\n\n    //render the UX for the user to enter login information and login to the site\n    render() {\n        const { classes } = this.props;\n        return (\n            <Box className={classes.main}>\n                <div className={classes.Login}>\n                    <div className={classes.center}>\n                        <img className={classes.logo} src={require(\"./bulb-logo.png\")} alt=\"disco logo\"/>\n                    </div>\n                    <Typography className={classes.title} align=\"center\">Sign in to Disco</Typography>\n                    <Grid container spacing={0}\n                          direction=\"column\"\n                          alignItems=\"center\"\n                          justify=\"center\"\n                    >\n                        <Grid item xs={3}>\n                            <Container className={classes.container}>\n                                <form className={classes.form} onSubmit={this.handleChange}>\n\n                                    <Input className={classes.input} placeholder=\"name\" type=\"text\" name=\"name\" value={this.state.value} onChange={this.handleNameChange}/>\n\n                                    <Input className={classes.input} placeholder=\"username or email\" type=\"text\" name=\"username\" value={this.state.value} onChange={this.handleEmailChange}/>\n\n                                    <Input className={classes.input} placeholder=\"password\" id=\"password\" type=\"text\" name=\"password\" value={this.state.value} onChange={this.handlePasswordChange}/>\n\n                                    <div className={classes.center}>\n                                        <Button className={classes.button} type=\"submit\" value=\"Submit\">Sign in</Button>\n                                    </div>\n                                    <div className={classes.center}>\n                                        <Typography className={classes.inline}>Don't have an account? </Typography>\n                                        <Button style={{color:\"#0e1428\"}} className={classes.inline} onClick={this.handleRegister}>Sign up</Button>\n                                    </div>\n                                </form>\n                            </Container>\n                        </Grid>\n                    </Grid>\n                </div>\n            </Box>\n        );\n    }\n}\n\nexport default withStyles(styles)(Login);","import React, {Component} from \"react\";\nimport classes from './Login.module.css'\n\nclass Animation extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    /**\n     * @desc Changes the view in layout from ANIMATION to LOGIN after 3200 milliseconds\n     */\n    componentDidMount() {\n        setTimeout(() => {\n            this.props.stopAnimation();\n        }, 3200)\n    }\n\n    //renders the login animation\n    render() {\n        return (\n            <div className={classes.fadeOut}>\n                <img src={require(\"./loginAnimation.gif\")} alt=\"loading...\"/>\n            </div>\n            //uses fadeOut to fade the animation out over time\n        )\n    }\n}\n\nexport default Animation;","import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n    root: {\n        minWidth: 275,\n        fontFamily: 'Montserrat',\n        textAlign: 'center',\n        boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.3)\",\n        \"&:hover\": {\n            boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.3)\"\n        },\n    },\n    title: {\n        fontSize: 25,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n    button: {\n        textAlign: 'center',\n        color: '#0e1428',\n        backgroundColor: '#EE6C4D',\n        margin: '5%',\n        textAlign: 'center',\n        width: '50%',\n        fontFamily: 'Montserrat',\n        fontWeight: '700',\n        fontSize: '12pt',\n        \"&:hover\": {\n            //color: '#EE6C4D',\n            backgroundColor: '#345E83', //change this to color of nav bar\n        },\n    },\n    actions: {\n        //textAlign: 'center',\n    },\n});\n\nexport default function Course(props) {\n    const classes = useStyles();\n\n    if (window.localStorage.getItem('login')) {\n        return (\n            <Card raised=\"true\" className={classes.root} variant=\"outlined\">\n                <CardContent>\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                        {props.name}\n                    </Typography>\n                    <Typography variant=\"body2\" component=\"p\">\n                        {props.description}\n                    </Typography>\n                    <Typography className={classes.pos} color=\"textSecondary\">\n                        Number of skills in course: {props.num_skills}\n                    </Typography>\n                    <Typography className={classes.pos} color=\"textSecondary\">\n                        Number of cards in course: {props.num_cards}\n                    </Typography>\n                </CardContent>\n                <div className={classes.actions}>\n\n                    <Button className={classes.button} color=\"secondary\" onClick={(e) => props.clickHandler(e, props.id)}>Let's Learn</Button>\n\n                </div>\n            </Card>\n\n        );\n    }\n}","import React, {Component} from \"react\";\nimport Course from  '../Course/Course';\nimport {Box} from '@material-ui/core'\n\nclass CourseList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selection: ''\n        };\n    }\n\n    selectCourse  = (courseKey) => {\n        this.setState({selection: courseKey})\n    }\n\n    render() {\n        /*TODO: figure out how to click on course and have the selection render the selection page.\n        *  This can probably be accomplished with an onclick method or something but that\n        *  has yet to be figured out. */\n\n        /*TODO: On course selection, render the selection container (which will then call SkillList\n        *  and subsequently Skill. */\n\n        const courses = this.props.courses.map(course => (\n            <Course\n                key={course.id}\n                id={course.id}\n                name={course.name}\n                description={course.description}\n                num_skills={course.num_skills}\n                num_cards={course.num_cards}\n                clickHandler={this.props.clickHandler}\n                token={this.props.token}\n            />\n        ));\n        if (window.localStorage.getItem('login')) {\n            return (\n                <Box>\n                    {courses}\n                </Box>\n            );\n        }\n    }\n}\n\nexport default CourseList;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: 345,\n    },\n    box: {\n        border: 1,\n        backgroundColor: '#D2E4EE',\n        padding: '5% 25%',\n        textAlign: 'center',\n        margin: 5,\n        borderRadius: '10px',\n    }\n}));\n\nexport default function Skill(props) {\n    const [state, setState] = React.useState({\n        ticked: false\n    });\n\n    // toggles check upon button press\n    const handleChange = (event) => {\n        if(!ticked) {\n            setState({...state, ticked: true});\n        } else {\n            setState({...state, ticked: false});\n        }\n    };\n\n    const { ticked } = state;\n\n    const classes = useStyles();\n\n    return (\n        <FormControlLabel\n            className={classes.box}\n            control={<Checkbox checked={ticked} onClick={(e) => props.skillUpdate(e, props.id)} onChange={handleChange} name=\"checked\"/>}\n            label={props.name}\n        />\n        // fills form group on SkillList component\n    );\n}\n","import React from \"react\";\nimport Skill from './Skill/Skill';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormGroup from '@material-ui/core/FormGroup';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        maxWidth: 345,\n    },\n    formControl: {\n        margin: theme.spacing(4),\n    },\n}));\n\nexport default function SkillList(props) {\n\n    const [state, setState] = React.useState({\n        title: 'SkillList'\n    });\n\n    const classes = useStyles();\n\n    const skills = props.skills.map(skill => (\n        <Skill\n            key={skill.id}\n            id={skill.id}\n            name={skill.name}\n            description={skill.description}\n            num_levels={skill.num_levels}\n            num_cards={skill.num_cards}\n            course={skill.course}\n            skillUpdate={props.skillUpdate}\n            token={props.token}\n        />\n    ));\n\n    if (window.localStorage.getItem('login') && JSON.parse(window.localStorage.getItem('view'))['subpage'] === 'SkillSelect') {\n        return (\n            <FormGroup>\n                {skills}\n            </FormGroup>\n            // wraps skills in FormGroup which will be displayed on Selection\n        );\n    }\n}\n\n","import React, {useState, useEffect} from \"react\";\nimport SkillList from \"../../components/SkillList/SkillList\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\n\nconst options = ['Select Practice Time', '5 minutes', '15 minutes', '30 minutes', '45 minutes', '1 hour'];\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n}));\n\nexport default function Selection(props) {\n    const [skills, setSkills] = useState([]);\n    const [open, setOpen] = useState(false);\n    const anchorRef = React.useRef(null);\n    const [selectedIndex, setSelectedIndex] = useState(0);\n    const classes = useStyles();\n\n    // Handles user input for selecting the amount of practice time\n    const handleMenuItemClick = (event, index) => {\n        setSelectedIndex(index);\n        setOpen(false);\n        switch (index) {\n            case 0:\n                // need to figure out how to make this not an option for submitting\n                // ex: they can't press Done unless selected time is not index 0\n                props.time(event, 0);\n                break;\n            case 1:\n                props.time(event, 5);\n                break;\n            case 2:\n                props.time(event, 15);\n                break;\n            case 3:\n                props.time(event, 30);\n                break;\n            case 4:\n                props.time(event, 45);\n                break;\n            case 5:\n                props.time(event, 60);\n                break;\n            default:\n                break;\n        }\n    };\n\n    // toggles time selector\n    const handleToggle = () => {\n        setOpen((prevOpen) => !prevOpen);\n    };\n\n    // handles button press for time selection\n    const handleClose = (event) => {\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\n            return;\n        }\n        setOpen(false);\n    };\n\n    useEffect(() => {\n        fetch(`/skills/${props.course}`, {\n            method: 'GET',\n            headers: {\n                'Content-type': 'application/json; charset=UTF-8',\n                'Authorization': 'Token ' + props.token\n            }\n        })\n            .then(response => response.json())\n            .then(data => {\n                setSkills(() => data);\n            });\n    }, [props]);\n\n    if (window.localStorage.getItem('login') === props.token) {\n        // main display for \"skill selection\" page\n        return (\n            <Grid container justify=\"center\" alignItems=\"center\" direction=\"column\">\n                {/* page header */}\n                <h1>Which skills do you want to practice today?</h1>\n                {/* skill selection buttons, filled dynamically by available skills */}\n                <SkillList\n                    skills={skills}\n                    skillUpdate={props.skillUpdate}\n                    token={props.token}\n                />\n                {/* dropdown button for time select */}\n                <Grid container direction=\"column\" alignItems=\"center\">\n                    <Grid item xs={12}>\n                        <ButtonGroup variant=\"contained\" color=\"primary\" ref={anchorRef} aria-label=\"split button\">\n                            <Button> {options[selectedIndex]} </Button>\n                            <Button\n                                color=\"primary\"\n                                size=\"small\"\n                                aria-controls={open ? 'split-button-menu' : undefined}\n                                aria-expanded={open ? 'true' : undefined}\n                                aria-label=\"select merge strategy\"\n                                aria-haspopup=\"menu\"\n                                onClick={handleToggle}\n                            >\n                                <ArrowDropDownIcon />\n                            </Button>\n                        </ButtonGroup>\n                        <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\n                            {({ TransitionProps, placement }) => (\n                                <Grow\n                                    {...TransitionProps}\n                                    style={{\n                                        transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\n                                    }}\n                                >\n                                    <Paper>\n                                        <ClickAwayListener onClickAway={handleClose}>\n                                            <MenuList id=\"split-button-menu\">\n                                                {options.map((option, index) => (\n                                                    <MenuItem\n                                                        key={option}\n                                                        selected={index === selectedIndex}\n                                                        onClick={(event) => handleMenuItemClick(event, index)}\n                                                    >\n                                                        {option}\n                                                    </MenuItem>\n                                                ))}\n                                            </MenuList>\n                                        </ClickAwayListener>\n                                    </Paper>\n                                </Grow>\n                            )}\n                        </Popper>\n                    </Grid>\n                </Grid>\n                <button onClick={props.doneClick} style={{backgroundColor:\"orange\"}}>\n                    Done\n                </button>\n            </Grid>\n        );\n    }\n}","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#3D5A80',\n            light: '#6b87b0',\n            dark: '#093153',\n        },\n        secondary: {\n            main: '#EE6C4D',\n            light: '#ff9d7a',\n            dark: '#b63c23',\n        },\n        disabled: {\n            main: \"#F2F4F7\",\n            light: '#ffffff',\n            dark: '#bfc1c4',\n        },\n        info: {\n            main: '#98c1d9',\n            light: '#caf4ff',\n            disabled: '#6891a7',\n        },\n        disco: {\n            main: '#E0FBFC',\n            light: '#ffffff',\n            dark: '#aec8c9',\n        },\n        charm: {\n            main: '#293241',\n            light: '#525b6c',\n            dark: '#000a1b',\n        }\n    },\n    typography: {\n        htmlFontSize: 16,\n        fontFamily: \"Montserrat\" | \"sans-serif\",\n        fontSize: 14,\n        fontWeightLight: 300,\n        fontWeightRegular: 400,\n        fontWeightMedium: 500,\n        fontWeightBold: 700,\n        h1: {\n            fontFamily: \"Montserrat\" | \"sans-serif\",\n            fontWeight: 300,\n            fontSize: \"6rem\",\n            lineHeight: 1.167,\n            letterSpacing: \"-0.01562em\",\n        },\n\n        h2: {\n            fontFamily: \"Roboto\" | \"Helvetica\" | \"Arial\" | \"sans-serif\",\n            fontWeight: 300,\n            fontSize: \"3.75rem\",\n            lineHeight: 1.2,\n            letterSpacing: \"-0.00833em\"\n        },\n\n        h3: {\n            fontFamily: \"Roboto\" | \"Helvetica\" | \"Arial\" | \"sans-serif\",\n            fontWeight: 400,\n            fontSize: \"3rem\",\n            lineHeight: 1.167,\n            letterSpacing: \"0em\",\n        },\n        h4: {\n            fontFamily: \"Roboto\" | \"Helvetica\" | \"Arial\" | \"sans-serif\",\n            fontWeight: 400,\n            fontSize: \"2.125rem\",\n            lineHeight: 1.235,\n            letterSpacing: \"0.00735em\",\n        },\n        h5: {\n            fontFamily: \"Roboto\" | \"Helvetica\" | \"Arial\" | \"sans-serif\",\n            fontWeight: 400,\n            fontSize: \"1.5rem\",\n            lineHeight: 1.334,\n            letterSpacing: \"0em\",\n        },\n        h6: {\n            fontFamily: \"Roboto\" | \"Helvetica\" | \"Arial\" | \"sans-serif\",\n            fontWeight: 500,\n            fontSize: \"1.25rem\",\n            lineHeight: 1.6,\n            letterSpacing: \"0.0075em\"\n        },\n        subtitle1: {\n            fontFamily: \"Roboto\" | \"Helvetica\" | \"Arial\" | \"sans-serif\",\n            fontWeight: 400,\n            fontSize: \"1rem\",\n            lineHeight: 1.75,\n            letterSpacing: \"0.00938em\"\n        },\n        subtitle2: {\n            fontFamily: \"Roboto\" | \"Helvetica\" | \"Arial\" | \"sans-serif\",\n            fontWeight: 500,\n            fontSize: \"0.875rem\",\n            lineHeight: 1.57,\n            letterSpacing: \"0.00714em\",\n        },\n        body1: {\n            fontFamily: \"Roboto\" | \"Helvetica\" | \"Arial\" | \"sans-serif\",\n            fontWeight: 400,\n            fontSize: \"1rem\",\n            lineHeight: 1.5,\n            letterSpacing: \"0.00938em\",\n        },\n        body2: {\n            fontFamily: \"Roboto\" | \"Helvetica\" | \"Arial\" | \"sans-serif\",\n            fontWeight: 400,\n            fontSize: \"0.875rem\",\n            lineHeight: 1.43,\n            letterSpacing: \"0.01071em\"\n        },\n        button: {\n            fontFamily: \"Roboto\" | \"Helvetica\" | \"Arial\" | \"sans-serif\",\n            fontWeight: 500,\n            fontSize: \"0.875rem\",\n            lineHeight: 1.75,\n            letterSpacing: \"0.02857em\",\n            textTransform: \"uppercase\",\n        },\n        caption: {\n            fontFamily: \"Roboto\" | \"Helvetica\" | \"Arial\" | \"sans-serif\",\n            fontWeight: 400,\n            fontSize: \"0.75rem\",\n            lineHeight: 1.66,\n            letterSpacing: \"0.03333em\",\n        },\n        overline: {\n            fontFamily: \"Roboto\" | \"Helvetica\" | \"Arial\" | \"sans-serif\",\n            fontWeight: 400,\n            fontSize: \"0.75rem\",\n            lineHeight: 2.66,\n            letterSpacing: \"0.08333em\",\n            textTransform: \"uppercase\"\n        },\n    },\n});\n\nexport default theme;","import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n// import CardMedia from \"@material-ui/core/CardMedia\";\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Theme from '../../theme';\nimport { Container, Grid } from '@material-ui/core';\n\n/* Styling for individual cards */\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: 345,\n        backgroundColor: '#D2E4EE',\n        //fontColor: 'red',\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: Theme.palette.primary.main,\n    },\n    favorite: {\n        textAlign: 'center',\n    },\n    body: {\n        fontFamily: 'Montserrat',\n        fontSize: '15pt',\n    },\n    title: {\n        fontFamily: 'Montserrat',\n        fontSize: '20pt',\n        textAlign: 'justified',\n    }\n    /*\n    header:  {\n        fontFamily: 'Montserrat',\n        fontSize: '18pt',\n        fontColor: 'red',\n    },\n\n     */\n}));\n\n/* Card component built using MaterialUI framework.\n * Card information is received through props.\n */\nexport default function CourseCard(props) {\n\n    // set states for expansion and is_favorited\n    const [state, setState] = React.useState({\n            showMore: false,\n            favorited: props.is_favorited !== 'False',\n        });\n    const classes = useStyles();\n\n    // expand card to show more content\n    const handleExpandClick = (event) => {\n        console.log(state.showMore);\n        let update = false;\n        if (!state.showMore) {\n            update = true;\n        }\n        setState({ ...state, [event.target.name]: update });\n        console.log(update);\n    };\n\n    // handle press on completed checkbox\n    const handleCompleteClick = (event) => {\n        props.pressComplete(event, props.id);\n\n        if(props.is_complete === 'True') {\n            {/* send time completed to database */}\n            {/* update time completed */}\n        }\n    }\n\n    // handle click on favorite icon\n    const handleFavorite = (event) => {\n        props.addToFavorites(event, props.id);\n        state.favorited = !state.favorited;\n\n    };\n\n    // Display the date of last completion on card\n    function dateToString(props) {\n        if (props.last_completed != null) {\n            d = (props.last_completed).toString();\n        }\n        else {\n            d = \"Never\";\n        }\n\n        return d;\n    }\n\n    // if the user is logged in, display the card\n    if (window.localStorage.getItem('login')) {\n        var d = dateToString(props);\n       // var d = 2;\n        return (\n\n            <Container>\n            <Card className={classes.root}>\n                <CardHeader\n                    avatar={\n                        <Avatar aria-label=\"card\" className={classes.avatar} src={require(\"./guitar.png\")}></Avatar>\n                    }\n                    action={\n                        <IconButton aria-label=\"settings\">\n                            <MoreVertIcon/>\n                        </IconButton>\n                    }\n                    title={\n                        <Typography className={classes.title}> {props.title} </Typography>\n                    }\n                />\n                {/*<CardMedia*/}\n                {/*    className={classes.media}*/}\n                {/*    image=\"/static/images/cards/paella.jpg\"*/}\n                {/*    title=\"Paella dish\"*/}\n                {/*/>*/}\n                <CardContent>\n                    <Typography className={classes.body} variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        {props.content}\n                    </Typography>\n                </CardContent>\n                <CardContent>\n                    <Typography className={classes.body} variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        Course: {props.course} <br/>\n                        Level: {props.level}\n                    </Typography>\n                </CardContent>\n                <CardContent>\n                    <Typography  variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        Last Completed: { d }\n                    </Typography>\n                </CardContent>\n                <CardActions disableSpacing>\n                    <IconButton className={classes.favorite}>\n                        <FormControlLabel\n                            control={<FavoriteIcon\n                                // className={classes.favorite}\n                                checked={props.is_favorited === 'True'}\n                                onClick={handleFavorite}\n                                name=\"favorited\"\n                                color={state.favorited ? 'secondary' : 'disabled' } />}\n                        />\n                    </IconButton>\n                    <FormControlLabel\n                        control={<Checkbox checked={props.is_complete === 'True'} onChange={handleCompleteClick} name=\"completed\" />}\n                        label=\"Completed\"\n                    />\n                    <IconButton\n                        className={clsx(classes.expand, {\n                            [classes.expandOpen]: state.showMore,\n                        })}\n                        onClick={handleExpandClick}\n                        aria-expanded={state.showMore}\n                        aria-label=\"show more\"\n                        name=\"showMore\"\n                    >\n                        <ExpandMoreIcon/>\n                    </IconButton>\n                </CardActions>\n                <Collapse in={state.showMore} timeout=\"auto\" unmountOnExit>\n                    <CardContent>\n                        <Typography paragraph>\n                            Nothing here for now but eventually we will want to add this.props.description or something\n                            like that if it exists (will require a more robust dataset)\n                        </Typography>\n                        <Typography paragraph>\n                            We can add another paragraph here if we want! Even more instructions\n                        </Typography>\n                        <Typography paragraph>\n                            Room for yet ANOTHER paragraph! Material UI is really doing the most.\n                        </Typography>\n                    </CardContent>\n                </Collapse>\n            </Card>\n            </Container>\n        );\n    }\n}","import React, {Component} from \"react\";\nimport CourseCard from  '../Card/Card';\n\n/* CardList component to display cards for user */\nclass CardList extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    // creates mapping of backend data to Card components\n    render() {\n        const cards = this.props.cards.map(card => (\n            <CourseCard\n                key={card.id}\n                id={card.id}\n                title={card.title}\n                course={card.course}\n                skill={card.skill}\n                level={card.level}\n                duration={card.duration}\n                view_count={card.view_count}\n                content={card.content}\n                is_complete={card.is_complete}\n                is_favorited={card.is_favorited}\n                pressComplete={this.props.completed}\n                addToFavorites={this.props.favorited}\n                token={this.props.token}\n                last_completed={card.last_completed}\n            />\n        ));\n        // Only display list if user is logged in\n        if (window.localStorage.getItem('login')) {\n            return (\n                <div>\n                    {cards}\n                </div>\n            );\n        }\n    }\n}\n\nexport default CardList;","import React, {Component} from \"react\";\nimport CardList from \"../../components/CardList/CardList\";\n\n/* Deck class handles the display and modifications\n * to the displayed card list\n */\nclass Deck extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            cards: JSON.parse(window.localStorage.getItem('cards'))\n        };\n    }\n\n    // Send message to backend when card is completed (checkbox is clicked)\n    handleComplete(e, cardId) {\n        fetch(`http://127.0.0.1:8000/cardprogress/${cardId}`, {\n            method: 'POST',\n            headers: {\n                'Content-type': 'application/json; charset=UTF-8',\n                'Authorization': 'Token ' + window.localStorage.getItem('login')\n            }\n        }).then(response => response.status)\n            .then(data => {\n                if (data === 404) {\n                    alert(\"Something went wrong, try again!\");\n                } else {\n                    this.refresh()\n                }\n            });\n    }\n\n    // Send message to backend when heart icon is clicked\n    handleFavorite(e, cardId) {\n        fetch(`/cardprogress/favorite/${cardId}`, {\n            method: 'POST',\n            headers: {\n                'Content-type': 'application/json; charset=UTF-8',\n                'Authorization': 'Token ' + window.localStorage.getItem('login')\n            }\n        }).then(response => response.status)\n            .then(data => {\n                if (data === 404) {\n                    alert(\"Something went wrong, try again!\");\n                } else {\n                    this.refresh()\n                }\n            });\n    }\n\n    // if the page is refreshed, make sure the correct data is displayed\n    refresh() {\n        this.str_url = 'http://127.0.0.1:8000/cards/refresh/' + this.props.courseid.toString() + '/' + this.props.skills.toString() + '/' + this.props.time.toString();\n        fetch(this.str_url, {\n            method: 'GET',\n            headers: {\n                'Content-type': 'application/json; charset=UTF-8',\n                'Authorization': 'Token ' + window.localStorage.getItem('login')\n            }\n        })\n            .then(response => response.json())\n            .then(data => {\n                window.localStorage.setItem('cards', JSON.stringify(data));\n                this.setState({cards: data});\n            });\n    }\n\n    // Collect data from backend when component mounts\n    componentDidMount() {\n        console.log(\"TIME = \" + this.props.time.toString());\n        this.str_url = '/cards/cardprogress/' + this.props.courseid.toString() + '/' + this.props.skills.toString() + '/' + this.props.time.toString();\n            fetch(this.str_url, {\n                method: 'GET',\n                headers: {\n                    'Content-type': 'application/json; charset=UTF-8',\n                    'Authorization': 'Token ' + window.localStorage.getItem('login')\n                }\n            })\n            .then(response => response.json())\n            .then(data => {\n                console.log('COMPONENT DID MOUNT:' + data);\n                window.localStorage.setItem('cards', JSON.stringify(data));\n                this.setState({cards: data});\n            });\n    }\n\n    render() {\n        // only display content if user is logged in\n        if (window.localStorage.getItem('login')) {\n            return (\n                <main>\n                    <div  className=\"d-flex justify-content-center\">\n                        <CardList\n                            cards={this.state.cards}\n                            completed={this.handleComplete.bind(this)}\n                            favorited={this.handleFavorite.bind(this)}\n                            token={this.props.token}\n                        />\n                    </div>\n                </main>\n            )\n        }\n    }\n}\n\nexport default Deck;","import React, {Component} from \"react\";\nimport CourseList from \"../../components/CourseList/CourseList\";\nimport Selection from \"../Selection/Selection\";\nimport Deck from \"../Deck/Deck\";\nimport \"./CourseWrapper.css\";\n\n// dictionary representing course selection view\nconst course_view = {\n    'main': 'CourseWrapper',\n    'subpage': 'CourseSelect'\n}\n\n// dictionary representing skill selection view\nconst skill_view = {\n    'main': 'CourseWrapper',\n    'subpage': 'SkillSelect'\n}\n\n// dictionary representing card (deck) view\nconst deck_view = {\n    'main': 'CourseWrapper',\n    'subpage': 'Deck'\n}\n\n/* CourseWrapper components handles the display of the\n * flow of the user's selection from course selection to\n * skill selection to the deck.\n */\nclass CourseWrapper extends Component {\n    constructor(props) {\n        super(props);\n        this.selectedSkills = [];\n        this.selectedTime = 0;\n    }\n\n    // collect state values from locals storage so if page is refreshed\n    // all data is not lost\n    state = {\n        courses: JSON.parse(window.localStorage.getItem('courses')),\n        skills: JSON.parse(window.localStorage.getItem('skills')),\n        selectedCourse: JSON.parse(window.localStorage.getItem('selectedCourse')),\n        time: JSON.parse(window.localStorage.getItem('time')),\n        view: JSON.parse(window.localStorage.getItem('view'))['subpage']\n    }\n\n    // handler for selecting a course\n    handleCourseClick(e, value) {\n        // set values for state as well as local storage\n        window.localStorage.setItem('view', JSON.stringify(skill_view));\n        window.localStorage.setItem('selectedCourse', value);\n        this.setState({\n            view: JSON.parse(window.localStorage.getItem('view'))['subpage'],\n            selectedCourse: value\n        });\n        this.props.viewToSkills();\n    }\n\n    // handler for skill selection (does not trigger state change)\n    skillSelection(e, skill) {\n        if (this.selectedSkills.indexOf(skill) !== -1) {\n            this.selectedSkills.splice(this.selectedSkills.indexOf(skill), 1);\n        } else {\n            this.selectedSkills.push(skill); //does not trigger a re-render\n        }\n    }\n\n    // handler for user clicked the \"done\" button\n    handleDonePress() {\n        // set necessary local storage and state values\n        window.localStorage.setItem('view', JSON.stringify(deck_view));\n        window.localStorage.setItem('skills', JSON.stringify(this.selectedSkills));\n        window.localStorage.setItem('time', this.selectedTime)\n        this.setState({\n            skills: this.selectedSkills,\n            view: JSON.parse(window.localStorage.getItem('view'))['subpage'],\n            time: this.selectedTime\n        });\n        this.props.viewToDeck();\n    }\n\n    // Update selected time from drop down menu\n    timeSelection(e, time) {\n        this.selectedTime = time;\n    }\n\n    // Retrieve data from from server\n    componentDidMount() {\n        fetch('/courses/', {\n            method: 'GET',\n            headers: {\n                'Content-type': 'application/json; charset=UTF-8',\n                'Authorization': 'Token ' + window.localStorage.getItem('login')\n            }\n        })\n            .then(response => response.json())\n            .then(data => {\n                window.localStorage.setItem('courses', JSON.stringify(data));\n                this.setState({courses: data});\n            });\n    }\n\n    // conditionally render correct view\n    render() {\n        let view = null;\n        if (this.props.courseReset) {\n            this.state.view = 'CourseSelect';\n            this.setState({token: this.state.token});\n            this.props.resetToCourse();\n            this.props.viewToCourse();\n        }\n        else if (this.props.skillReset) {\n            this.state.view = 'SkillSelect';\n            this.setState({token: this.state.token});\n            this.props.resetToSkill();\n            this.props.viewToSkills();\n        }\n        switch(this.state.view) {\n            case 'CourseSelect': // display course selection\n            window.localStorage.setItem('view', JSON.stringify(course_view));\n                view = (<div className=\"div\">\n                    <h1 className=\"h1\">What would you like to work on today?</h1>\n                    <div className=\"d-flex justify-content-center\">\n                        <CourseList courses={this.state.courses}\n                                    clickHandler={this.handleCourseClick.bind(this)}\n                                    token={this.props.token}\n                        />\n                    </div>\n                </div>)\n                break;\n            case 'SkillSelect': // display skill selection\n                window.localStorage.setItem('view', JSON.stringify(skill_view));\n                view = <Selection skills={this.state.skills}\n                                  skillUpdate={this.skillSelection.bind(this)}\n                                  doneClick={this.handleDonePress.bind(this)}\n                                  course={this.state.selectedCourse}\n                                  token={this.props.token}\n                                  time={this.timeSelection.bind(this)}\n                />\n                break;\n            case 'Deck': // display cards\n                if (JSON.parse(window.localStorage.getItem('cards')) === null) {\n                    window.localStorage.setItem('cards', JSON.stringify([]));\n                }\n                view = <Deck courseid={this.state.selectedCourse}\n                             skills={this.state.skills}\n                             token={window.localStorage.getItem('login')}\n                             time={this.state.time}\n                />\n        }\n        // Only display content if user is logged in\n        if (window.localStorage.getItem('login')) {\n            return (\n                <main>\n                    {view}\n                </main>\n            )\n        }\n    }\n}\n\nexport default CourseWrapper;\n","import React, {Component} from \"react\";\nimport {Avatar, Box,withStyles, Button,TextField,Grid,Paper,AppBar,Typography,Toolbar,Link,Input,Container} from \"@material-ui/core\";\n//import { useForm } from 'react-hook-form';\n\n/* Styling to match Login page */\nconst styles = theme => ({\n\n    main: {\n        fontFamily: 'Montserrat',\n    },\n\n    center: {\n        textAlign: 'center',\n\n    },\n\n    input: {\n        margin: '10px',\n        color: '#0e1428',\n        fontSize: '20px',\n        padding: '5px',\n        width: '90%',\n    },\n\n    formName: {\n        textAlign: 'center',\n        fontFamily: 'Montserrat',\n        fontSize: '35pt',\n        color: '#0e1428',\n    },\n\n    logo: {\n        justify: 'center',\n        width: '15%',\n        height: '15%',\n    },\n    title: {\n        fontFamily: 'Montserrat',\n        fontSize: '40pt',\n        color: '#0e1428',\n    },\n\n    container: {\n        borderColor: '#98C1D9',\n        borderWidth: '3px',\n        borderStyle: 'solid',\n        minWidth: '100%',\n        marginTop: '10%',\n        borderRadius: '5px',\n    },\n\n    button: {\n        fontSize: '17pt',\n        fontFamily: 'Montserrat',\n        backgroundColor: '#EE6C4D',\n        margin: '5%',\n        textAlign: 'center',\n        width: '90%',\n        \"&:hover\": {\n            backgroundColor: '#345E83', //change this to color of nav bar\n        },\n    },\n\n\n\n});\n\n/** This class is directed from the login page\n *  to handle a new user sign up and authentication\n *  and redirects back to the login page once created.\n */\nclass Registration extends Component {\n\n    // Information needed for user registration\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            username: '',\n            password: '',\n            confirm: '',\n            token: ''\n        };\n        this.str_url = \"\";\n    }\n\n    // Handles submission to register user\n    handleChange = event => {\n        event.preventDefault();\n\n        // Authenticate both passwords match\n        if (this.state.password.toString() !== this.state.confirm.toString()) {\n            alert(\"Passwords do not match\");\n        } else {\n            // Send information of new user to server\n            this.str_url = '/register/' + this.state.username;\n            fetch(this.str_url, {\n                method: 'POST',\n                body: JSON.stringify({\n                    name: this.state.name.toString(),\n                    username: this.state.username.toString(),\n                    password: this.state.password.toString()\n                }),\n                headers: {\n                    'Content-type': 'application/json; charset=UTF-8'\n                }\n            }).then(response => response.status)\n                .then(data => {\n                    // Read response from server and act accordingly\n                    if (data === 400) {\n                        alert(\"Username already exists\");\n                    } else {\n                        this.props.formClick(this.state.token);\n                        // Redirect user to login page if success\n                        this.props.toLogin();\n                    }\n                });\n        }\n    }\n\n    // Save value inputted by user for name\n    handleNameChange = event => {\n        const value = event.target.value;\n        this.setState({name: value});\n    }\n\n    // Save value inputted by user for username\n    handleEmailChange = event => {\n        const value = event.target.value;\n        this.setState({username: value});\n    }\n\n    // Save value inputted by user for password\n    handlePasswordChange = event => {\n        const value = event.target.value;\n        this.setState({password: value});\n    }\n\n    // Save value inputted by user for password confirmation\n    handleConfirmPasswordChange = event => {\n        const value = event.target.value;\n        this.setState({confirm: value});\n    }\n\n    // Render form for user to complete\n    render() {\n        const { classes } = this.props;\n        return (\n\n            <Box className={classes.main}>\n                <div className={classes.Login}>\n                    <div className={classes.center}>\n                        <img className={classes.logo} src={require(\"./bulb-logo.png\")} alt=\"disco logo\"/>\n                    </div>\n                    <Typography className={classes.title} align=\"center\">Sign in to Disco</Typography>\n                    <Grid container spacing={0}\n                          direction=\"column\"\n                          alignItems=\"center\"\n                          justify=\"center\"\n                    >\n                        <Grid item xs={3}>\n                            <Container className={classes.container}>\n                                <form className={classes.form} onSubmit={this.handleChange}>\n\n                                    <Input className={classes.input} placeholder=\"name\" type=\"text\" name=\"name\" value={this.state.value} onChange={this.handleNameChange}/>\n\n                                    <Input className={classes.input} placeholder=\"username or email\" type=\"text\" name=\"username\" value={this.state.value} onChange={this.handleEmailChange}/>\n\n                                    <Input className={classes.input} placeholder=\"password\" id=\"password\" type=\"text\" name=\"password\" value={this.state.value} onChange={this.handlePasswordChange}/>\n\n                                    <Input className={classes.input} placeholder=\"Confirm password\" id=\"Confirm password\" type=\"text\" name=\"Confirm password\" value={this.state.value} onChange={this.handleConfirmPasswordChange}/>\n\n                                    <div className={classes.center}>\n                                        <Button className={classes.button} type=\"submit\" value=\"Submit\">Sign Up</Button>\n                                    </div>\n                                </form>\n                            </Container>\n                        </Grid>\n                    </Grid>\n                </div>\n            </Box>\n        );\n\n    }\n}\n\nexport default withStyles(styles)(Registration);\n\n","import React, {Component} from \"react\";\nimport {Drawer,\n    Divider,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    AppBar,\n    Toolbar,\n    IconButton,\n    Typography,\n    CssBaseline\n} from '@material-ui/core';\n\nimport CardList from \"../../components/CardList/CardList\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport SportsHandball from '@material-ui/icons/SportsHandball';\nimport Today from '@material-ui/icons/Today';\nimport Settings from '@material-ui/icons/Settings';\nimport Input from '@material-ui/icons/Input';\nimport Palette from '@material-ui/icons/Palette';\n\n\n\nconst drawerWidth = 240;\n\n\n/**\n * @desc Sets the style to be used in the Side Bar\n * @param makeStyles - styles take from material ui core styles\n */\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n}));\n\n\n\n/**\n * @desc Side Bar that appears on the left side of the webpage\n * @param parent functions that are passed in from layout\n */\nconst SideBar = ({parentCourse, parentCalendar, parentSettings, parentLogout, parentView, parentCourseView, parentSkill}) => {\n\n    const viewEnum = {\n        COURSE: '2',\n        CALENDER: '3',\n        SETTINGS: '4',\n        DECK: '5',\n    }\n\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(false);\n\n\n    /**\n     * @desc Allows the drawer to be opened\n     */\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    /**\n     * @desc Does not allow the drawer to be opened\n     */\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    //variable that controls ability to open the sidebar\n    var drawerAction;\n\n    //Side bar options on Course List\n    const OnCourseList = [\n        {\n            text: \"Logout\", //text for the icon slot\n            icon: <Input/>, //icon from material ui to be used in slot\n            onClick: () => parentLogout() //where the slot takes you on click\n        },\n    ];\n\n\n    //Side bar options on Skill Select\n    const OnSkillSelect = [\n        //shouldnt add skill selection or deck\n        {\n            text: \"Course Select\",\n            icon: <Palette/>,\n            onClick: () => parentCourse()\n        },\n        {\n            text: \"Logout\",\n            icon: <Input/>,\n            onClick: () => parentLogout()\n        },\n    ];\n\n    //Side bar options on Cards\n    const OnCards = [\n\n        {\n            text: \"Course Select\",\n            icon: <Palette/>,\n            onClick: () => parentCourse()\n        },\n\n        {\n            text: \"Skill Select\",\n            icon: <SportsHandball/>,\n            onClick: () => parentSkill()\n        },\n\n        {\n            text: \"Logout\",\n            icon: <Input/>,\n            onClick: () => parentLogout()\n        }\n    ];\n\n    //Side bar options on Calender\n    const OnCalender = [\n\n        {\n            text: \"Course Select\",\n            icon: <Palette/>,\n            onClick: () => parentCourse()\n        },\n\n        {\n            text: \"Account Settings\",\n            icon: <Settings/>,\n            onClick: () => parentSettings()\n        },\n\n        {\n            text: \"Logout\",\n            icon: <Input/>,\n            onClick: () => parentLogout()\n        }\n    ];\n\n    //Side bar options on Account Settings\n    const AccountSettings = [\n\n        {\n            text: \"Course Select\",\n            icon: <Palette/>,\n            onClick: () => parentCourse()\n        },\n\n        {\n            text: \"See Calender\",\n            icon: <Today/>,\n            onClick: () => parentCalendar()\n        },\n\n        {\n            text: \"Logout\",\n            icon: <Input/>,\n            onClick: () => parentLogout()\n        }\n    ];\n\n    let Items = [];\n\n    //Switch that controls what Side Bar view is showing\n    switch (parentView) {\n        case viewEnum.COURSE:\n            //Within COURSE you can be on course, skill select or deck\n            if (parentCourseView === '1') {\n                Items = OnSkillSelect;\n                drawerAction = () => handleDrawerOpen();\n                break;\n\n            }\n            else if (parentCourseView === '2') {\n                Items = OnCards;\n                drawerAction = () => handleDrawerOpen();\n                break;\n            }\n            else {\n                Items = OnCourseList;\n                drawerAction = () => handleDrawerOpen();\n                break;\n            }\n        case viewEnum.DECK: //not in use right now\n            Items = OnCards;\n            drawerAction = () => handleDrawerOpen();\n            break;\n        case viewEnum.CALENDER:\n            Items = OnCalender;\n            drawerAction = () => handleDrawerOpen();\n            break;\n        case viewEnum.SETTINGS:\n            Items = AccountSettings;\n            drawerAction = () => handleDrawerOpen();\n            break;\n        default:\n            Items = [];\n            drawerAction = () => handleDrawerClose();\n            break;\n    }\n\n    //Used to render the final Side Bar\n    return (\n        <div className={classes.root}>\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={drawerAction}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, open && classes.hide)}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                </Toolbar>\n\n            </AppBar>\n\n            <Drawer\n                className={classes.drawer}\n                variant=\"persistent\"\n                anchor=\"left\"\n                open={open}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <div className={classes.drawerHeader}>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                    </IconButton>\n                </div>\n                <Divider />\n                <List>\n                    {Items.map((item, index) => {\n                        const { text, icon, onClick } = item;\n                        return (\n                            <ListItem button key={text} onClick={onClick}>\n                                {icon && <ListItemIcon>{icon}</ListItemIcon>}\n                                <ListItemText primary={text} />\n                            </ListItem>\n                        );\n                    })}\n                </List>\n            </Drawer>\n        </div>\n    );\n\n}\nexport default SideBar;","import React, {Component} from 'react';\nimport Login from \"../../containers/Login/Login\";\nimport classes from './Layout.module.css'\nimport Animation from \"../../containers/Login/Animation\"\nimport CourseWrapper from \"../../containers/CourseWrapper/CourseWrapper\";\nimport Selection from \"../../containers/Selection/Selection\";\nimport Registration from \"../../containers/Registration/Registration\";\nimport SideBar from \"../../containers/SideBar/SideBar\";\n\n//enumeration used to switch between webpage layouts\nconst viewEnum = {\n    ANIMATION: '0',\n    LOGIN: '1',\n    COURSE: '2',\n    SELECTION: '3',\n    REGISTRATION: '4'\n}\n\n\nclass Layout extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            //layoutView will get the value of 'layoutView' in local storage if it exists, otherwise ANIMATION\n            layoutView: window.localStorage.getItem('layoutView') || viewEnum.ANIMATION,\n            //token will get the value of 'login' in local storage\n            token: window.localStorage.getItem('login'),\n            courseReset: false,\n            skillReset: false,\n            //courseView will get the value of 'courseView' in local storage if it exists, '0'\n            courseView: window.localStorage.getItem('courseView') || '0'\n        }\n    }\n\n    /**\n     * @desc On a formClick in Login or Registration, this function changes the layout to\n     * the COURSE page.\n     * @param token - the login token for the user\n     */\n    changeLayoutState = (token) => {\n        window.localStorage.setItem('login', token);\n        this.setState({token: token});\n        this.setState({layoutView: viewEnum.COURSE});\n        console.log(\"Set token: \" + this.state.token)\n        this.setState({layoutView: viewEnum.COURSE});\n        window.localStorage.setItem('layoutView', viewEnum.COURSE);\n    }\n\n    /**\n     * @desc Switches the layout from ANIMATION to LOGIN\n     */\n    stopAnimation = () => {\n        this.setState({layoutView: viewEnum.LOGIN});\n        window.localStorage.setItem('layoutView', viewEnum.LOGIN);\n    }\n\n    /**\n     * @desc Switch the layout to REGISTRATION\n     */\n    toRegistration = () => {\n        this.setState({layoutView: viewEnum.REGISTRATION});\n        window.localStorage.setItem('layoutView', viewEnum.REGISTRATION);\n    }\n\n    /**\n     * @desc Switch the layout to LOGIN\n     */\n    toLogin = () => {\n        this.setState({layoutView: viewEnum.LOGIN});\n        window.localStorage.setItem('layoutView', viewEnum.LOGIN);\n    }\n\n    /**\n     * @desc Changes courseReset from false/true to true/false. Used in CourseWrapper to change back to COURSE\n     */\n    resetToCourse = () => {\n        this.setState({courseReset: !this.state.courseReset});\n    }\n\n    /**\n     * @desc Changes skillReset from false/true to true/false. Used in CourseWrapper to change back to SKILL\n     */\n    resetToSkill = () => {\n        this.setState({skillReset: !this.state.skillReset});\n    }\n\n    /**\n     * @desc Currently not in use\n     */\n    goCalendar = () => {\n        window.localStorage.setItem('layoutView', viewEnum.ANIMATION);\n        this.setState({layoutView: viewEnum.ANIMATION});\n        console.log(this.state.layoutView + \" CALENDER\");\n        console.log(window.localStorage.getItem('layoutView') + \" asjhfdlkasjdhflka\");\n        console.log(this.state.layoutView + \" CALENDER\");\n    }\n\n    /**\n     * @desc Currently not in use\n     */\n    goSettings = () => {\n        this.setState({layoutView: viewEnum.ANIMATION});\n        window.localStorage.setItem('layoutView', viewEnum.ANIMATION);\n    }\n\n    /**\n     * @desc Changes page layout back to ANIMATION upon loging out\n     */\n    goLogout = () => {\n        window.localStorage.clear();\n        this.setState({token: ''});\n        this.setState({layoutView: viewEnum.ANIMATION});\n        window.localStorage.setItem('layoutView', viewEnum.ANIMATION);\n    }\n\n    /**\n     * @desc Changes the course view to '0' or course to be used in the SideBar\n     */\n    viewToCourse = () => {\n        this.setState({courseView: '0'});\n        window.localStorage.setItem('courseView', '0');\n    }\n\n    /**\n     * @desc Changes the course view to '1' or skill to be used in the SideBar\n     */\n    viewToSkills = () => {\n        this.setState({courseView: '1'});\n        window.localStorage.setItem('courseView', '1');\n    }\n\n    /**\n     * @desc Changes the course view to '2' or deck to be used in the SideBar\n     */\n    viewToDeck = () => {\n        this.setState({courseView: '2'});\n        window.localStorage.setItem('courseView', '2');\n    }\n\n    /**\n     * @desc Renders the appropriate web page layout\n     */\n    render() {\n        let view = null;\n        if (window.localStorage.getItem('login') && this.state.layoutView === viewEnum.COURSE) {\n            if (JSON.parse(window.localStorage.getItem('view'))['main'] !== 'CourseWrapper') {\n                // set local storage if it's not already set for course wrapper\n                console.log(\"is in herr\");\n                let page_view = {\n                    'main': 'CourseWrapper',\n                    'subpage': 'CourseSelect'\n                }\n                window.localStorage.setItem('view', JSON.stringify(page_view));\n                window.localStorage.setItem('courses', JSON.stringify([]));\n                window.localStorage.setItem('skills', JSON.stringify([]));\n                view = <CourseWrapper token={this.state.token}\n                                      courseReset={this.state.courseReset}\n                                      skillReset={this.state.skillReset}\n                                      viewToCourse={this.viewToCourse.bind(this)}\n                                      viewToSkills={this.viewToSkills.bind(this)}\n                                      viewToDeck={this.viewToDeck.bind(this)}\n                                      resetToCourse={this.resetToCourse.bind(this)}\n                                      resetToSkill={this.resetToSkill.bind(this)}\n\n                />\n            } else {\n                // do not reset local storage\n                view = <CourseWrapper token={this.state.token}\n                                      courseReset={this.state.courseReset}\n                                      skillReset={this.state.skillReset}\n                                      viewToCourse={this.viewToCourse.bind(this)}\n                                      viewToSkills={this.viewToSkills.bind(this)}\n                                      viewToDeck={this.viewToDeck.bind(this)}\n                                      resetToCourse={this.resetToCourse.bind(this)}\n                                      resetToSkill={this.resetToSkill.bind(this)}\n                />;\n            }\n        }\n\n\n        switch (this.state.layoutView) {\n            case viewEnum.ANIMATION:\n                view = <Animation stopAnimation={this.stopAnimation.bind(this)}/>;\n                break;\n            case viewEnum.LOGIN:\n                view = <Login formClick={this.changeLayoutState.bind(this)} toRegistration={this.toRegistration.bind(this)}/>;\n                const page_view = {\n                    'main': 'Login',\n                    'subpage': null\n                }\n                window.localStorage.setItem('view', JSON.stringify(page_view));\n                break;\n            case viewEnum.REGISTRATION:\n                view = <Registration formClick={this.changeLayoutState.bind(this)} toLogin={this.toLogin.bind(this)}/>;\n                break;\n        }\n\n        return (\n            <div>\n                <main className={classes.Content}>\n                    {view}\n                </main>\n                <SideBar parentCourse={this.resetToCourse.bind(this)}\n                         parentCalendar={this.goCalendar.bind(this)}\n                         parentSettings={this.goSettings.bind(this)}\n                         parentLogout={this.goLogout.bind(this)}\n                         parentView={this.state.layoutView}\n                         parentSkill={this.resetToSkill.bind(this)}\n                         parentCourseView={this.state.courseView}\n                />\n            </div>\n        );\n    }\n}\n\nexport default Layout;","import React, {Component} from 'react';\nimport Layout from \"./hoc/Layout/Layout\";\nimport './App.css';\n\nclass App extends Component {\n    render() {\n        return (\n            <div>\n                <Layout/>\n            </div>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { ThemeProvider } from '@material-ui/core/styles' ;\nimport theme from \"./theme\";\n\nReactDOM.render(\n    <ThemeProvider theme={theme}>\n        <App />\n    </ThemeProvider>\n    ,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3H3X8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__IEkli\",\"button\":\"Login_button__3VrPS\",\"submit\":\"Login_submit__lBpKP\",\"fadeIn\":\"Login_fadeIn__2P3ao\",\"name\":\"Login_name__2eMHf\",\"username\":\"Login_username__2xIAC\",\"password\":\"Login_password__19d2Z\",\"fadeOut\":\"Login_fadeOut__1N07A\"};"],"sourceRoot":""}